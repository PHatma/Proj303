{
  "_args": [
    [
      {
        "raw": "merge-options@^3.0.4",
        "scope": null,
        "escapedName": "merge-options",
        "name": "merge-options",
        "rawSpec": "^3.0.4",
        "spec": ">=3.0.4 <4.0.0",
        "type": "range"
      },
      "C:\\Users\\lenovo\\Desktop\\FashionApp\\Proj303\\node_modules\\@react-native-async-storage\\async-storage"
    ]
  ],
  "_from": "merge-options@^3.0.4",
  "_hasShrinkwrap": false,
  "_id": "merge-options@3.0.4",
  "_location": "/merge-options",
  "_nodeVersion": "14.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/merge-options_3.0.4_1606146935636_0.7347415428004151"
  },
  "_npmUser": {
    "name": "schnittstabil",
    "email": "michael@schnittstabil.de"
  },
  "_npmVersion": "6.14.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "merge-options@^3.0.4",
    "scope": null,
    "escapedName": "merge-options",
    "name": "merge-options",
    "rawSpec": "^3.0.4",
    "spec": ">=3.0.4 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@react-native-async-storage/async-storage"
  ],
  "_resolved": "https://registry.npmjs.org/merge-options/-/merge-options-3.0.4.tgz",
  "_shasum": "84709c2aa2a4b24c1981f66c179fe5565cc6dbb7",
  "_shrinkwrap": null,
  "_spec": "merge-options@^3.0.4",
  "_where": "C:\\Users\\lenovo\\Desktop\\FashionApp\\Proj303\\node_modules\\@react-native-async-storage\\async-storage",
  "author": {
    "name": "Michael Mayer",
    "email": "michael@schnittstabil.de"
  },
  "bugs": {
    "url": "https://github.com/schnittstabil/merge-options/issues"
  },
  "dependencies": {
    "is-plain-obj": "^2.1.0"
  },
  "description": "Merge Option Objects",
  "devDependencies": {
    "ava": "^3.11.1",
    "coveralls": "^3.1.0",
    "nyc": "^15.1.0",
    "rimraf": "^3.0.2",
    "tsd": "^0.13.1",
    "xo": "^0.33.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-2Sug1+knBjkaMsMgf1ctR1Ujx+Ayku4EdJN4Z+C2+JzoeF7A3OZ9KM2GY0CpQS51NR61LTurMJrRKPhSs3ZRTQ==",
    "shasum": "84709c2aa2a4b24c1981f66c179fe5565cc6dbb7",
    "tarball": "https://registry.npmjs.org/merge-options/-/merge-options-3.0.4.tgz",
    "fileCount": 6,
    "unpackedSize": 10667,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfu9t4CRA9TVsSAnZWagAAfZIP/i5b57FHabmq+z0EU0a2\nTLndZHJZZx+AsFkeOP3REKtza+3kP59spOYA/X+iKbqGXXyBHCfR3jT7onOr\nZ7heXE2pDddhP18ZmPU5w+edq6KrVQ5ynYrO4Tp0j+vHg3Gu9ZoO+O4S2sNP\nEyj1Phkus8UDc6JijuJsnOJwEFK2vOOT6QO3bKUuV8+27DsOpaetwr+Srd+k\n+ZX1JIXMiaSP8C+lJp3y15G1g7/gZorPlhDtnVF7QnZstIv+1S9UmZAOlBtQ\n+mAJ0ragRdugkN86y2hOnKrp2ti1q8Yi+IwwikJjlhwQ1Fp6ZRBSfadN7YO5\nTGtoWZos30azJ6wqHOIvWF3+S1MuJlTyJk1WPPOiE6nzCSlsn/lA4h7gzaix\nErXt0IZmPoONAWy98WtF8Sz/QML//ScOO4W6FA5saKNo1RE4Xca2uDLai1Cq\noLHFMqYI45LyXH41pVsUl3BRwthWVInW8r4BwhObZ+fQmFIoDl6rRaACx8wj\nk7FyMecRkBhYbyINrD0Yg5uywtLC3pnWAFuUOHBO/JgZPIm4P/I0JfoBi/v5\n23OUB9begpn/s2hdMCHe/PgR2ojRvD+AAanjY8pL+AHYPypbm0BGEhuPBYMM\n7+v63Mh3fwdl+5oQ9SEG+iiSuO5gpQpKXzLuIipgOmmO8fDpT9a03SuL9t8Q\nAMLf\r\n=qY80\r\n-----END PGP SIGNATURE-----\r\n",
    "signatures": [
      {
        "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
        "sig": "MEQCIGDC0xxftZ02nvEn7etCJ7iRq2hXFUMW//xgPj7ruJhxAiAOdUvrz2u6sWknINScAS97rdTOu+/6ALe9N9RjaB+zjA=="
      }
    ]
  },
  "engines": {
    "node": ">=10"
  },
  "exports": {
    "require": "./index.js",
    "import": "./index.mjs"
  },
  "files": [
    "index.d.ts",
    "index.js",
    "index.mjs"
  ],
  "gitHead": "2b96ee3e6e9b276b1410d239c7e20e3326fdd6cd",
  "homepage": "https://github.com/schnittstabil/merge-options#readme",
  "keywords": [
    "merge",
    "options",
    "deep",
    "plain",
    "object",
    "extend",
    "clone"
  ],
  "license": "MIT",
  "main": "./index.js",
  "maintainers": [
    {
      "name": "schnittstabil",
      "email": "michael@schnittstabil.de"
    }
  ],
  "name": "merge-options",
  "optionalDependencies": {},
  "readme": "# merge-options [![Build Status](https://travis-ci.org/schnittstabil/merge-options.svg?branch=master)](https://travis-ci.org/schnittstabil/merge-options) [![Coverage Status](https://coveralls.io/repos/schnittstabil/merge-options/badge.svg?branch=master&service=github)](https://coveralls.io/github/schnittstabil/merge-options?branch=master) [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/sindresorhus/xo)\n\n\n> Merge Option Objects\n\n`merge-options` considers [plain objects](https://github.com/sindresorhus/is-plain-obj) as *Option Objects*, everything else as *Option Values*.\n\n## Install\n\n```\n$ npm install --save merge-options\n```\n\n## Usage\n\n```js\nconst mergeOptions = require('merge-options');\n\nmergeOptions({foo: 0}, {bar: 1}, {baz: 2}, {bar: 3})\n//=> {foo: 0, bar: 3, baz: 2}\n\nmergeOptions({nested: {unicorns: 'none'}}, {nested: {unicorns: 'many'}})\n//=> {nested: {unicorns: 'many'}}\n\nmergeOptions({[Symbol.for('key')]: 0}, {[Symbol.for('key')]: 42})\n//=> {Symbol(key): 42}\n```\n\n### Usage with custom config\n\n```js\nconst mergeOptions = require('merge-options').bind({ignoreUndefined: true});\n\nmergeOptions({foo: 'bar'}, {foo: undefined})\n//=> {foo: 'bar'}\n```\n\n## API\n\n### mergeOptions(option1, ...options)<br/>mergeOptions.call(config, option1, ...options)<br/>mergeOptions.apply(config, [option1, ...options])\n\n`mergeOptions` recursively merges one or more *Option Objects* into a new one and returns that. The `options` are merged in order, thus *Option Values* of additional `options` take precedence over previous ones.\n\nThe merging does not alter the passed `option` arguments, taking roughly the following steps:\n* recursively cloning<sup><a href=\"#note1\">[1]</a></sup> *Option Objects* and [arrays](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray) until reaching *Option Values*\n* copying<sup><a href=\"#note1\">[1]</a></sup> references to *Option Values* to the result object\n\n\n```js\nconst defaultOpts = {\n\tfn:      () => false,                  // functions are Option Values\n\tpromise: Promise.reject(new Error()),  // all non-plain objects are Option Values\n\tarray:   ['foo'],                      // arrays are Option Values\n\tnested:  {unicorns: 'none'}            // {…} is plain, therefore an Option Object\n};\n\nconst opts = {\n\tfn:      () => true,                   // [1]\n\tpromise: Promise.resolve('bar'),       // [2]\n\tarray:   ['baz'],                      // [3]\n\tnested:  {unicorns: 'many'}            // [4]\n};\n\nmergeOptions(defaultOpts, opts)\n//=>\n{\n\tfn:      [Function],                   // === [1]\n\tpromise: Promise { 'bar' },            // === [2]\n\tarray:   ['baz'],                      // !== [3] (arrays are cloned)\n\tnested:  {unicorns: 'many'}            // !== [4] (Option Objects are cloned)\n}\n```\n\n#### config\n\nType: `object`\n\n##### config.concatArrays\n\nType: `boolean`<br/>Default: `false`\n\nConcatenate arrays:\n\n```js\nmergeOptions({src: ['src/**']}, {src: ['test/**']})\n//=> {src: ['test/**']}\n\n// Via call\nmergeOptions.call({concatArrays: true}, {src: ['src/**']}, {src: ['test/**']})\n//=> {src: ['src/**', 'test/**']}\n\n// Via apply\nmergeOptions.apply({concatArrays: true}, [{src: ['src/**']}, {src: ['test/**']}])\n//=> {src: ['src/**', 'test/**']}\n```\n\n##### config.ignoreUndefined\n\nType: `boolean`<br/>Default: `false`\n\nIgnore undefined values:\n\n```js\nmergeOptions({foo: 'bar'}, {foo: undefined})\n//=> {foo: undefined}\n\n// Via call\nmergeOptions.call({ignoreUndefined: true}, {foo: 'bar'}, {foo: undefined})\n//=> {foo: 'bar'}\n\n// Via apply\nmergeOptions.apply({ignoreUndefined: true}, [{foo: 'bar'}, {foo: undefined}])\n//=> {foo: 'bar'}\n```\n\n\n## Related\n\n* See [object-assign](https://github.com/sindresorhus/object-assign) if you need a ES2015 Object.assign() ponyfill\n* See [deep-assign](https://github.com/sindresorhus/deep-assign) if you need to do Object.assign() recursively\n\n## Notes\n\n<ol>\n\t<li id=\"note1\">copying and cloning take only enumerable own properties into account</li>\n</ol>\n\n## License\n\nMIT © [Michael Mayer](http://schnittstabil.de)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/schnittstabil/merge-options.git"
  },
  "scripts": {
    "clean": "rimraf .nyc_output/ coverage/",
    "coverage-html": "nyc ava && nyc report --reporter=html",
    "lint": "xo",
    "test": "xo && tsd && nyc ava",
    "typecheck": "tsd",
    "unit": "ava"
  },
  "version": "3.0.4",
  "xo": {
    "rules": {
      "import/extensions": "off",
      "import/no-useless-path-segments": "off",
      "unicorn/import-index": "off"
    }
  }
}
